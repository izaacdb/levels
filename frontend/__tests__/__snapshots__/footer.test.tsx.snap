// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Footer /> snapshot test 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <ul
        class="footer__Container-s1gfd3-0 ikZSNR"
      >
        <li
          class="footer__Item-s1gfd3-1 eUqZAy"
        >
          <label
            class="footer__Label-s1gfd3-2 dSCXMj"
          >
            Mean:
          </label>
          <div
            class="footer__Value-s1gfd3-3 etBDQI"
            data-testid="mean"
          >
            9.1
          </div>
        </li>
        <li
          class="footer__Item-s1gfd3-1 eUqZAy"
        >
          <label
            class="footer__Label-s1gfd3-2 dSCXMj"
          >
            Maximum:
          </label>
          <div
            class="footer__Value-s1gfd3-3 etBDQI"
            data-testid="max"
          >
            9.1
          </div>
        </li>
        <li
          class="footer__Item-s1gfd3-1 eUqZAy"
        >
          <label
            class="footer__Label-s1gfd3-2 dSCXMj"
          >
            Minimum:
          </label>
          <div
            class="footer__Value-s1gfd3-3 etBDQI"
            data-testid="min"
          >
            9.0
          </div>
        </li>
        <br />
        <li
          class="footer__Item-s1gfd3-1 eUqZAy"
        >
          <label
            class="footer__Label-s1gfd3-2 dSCXMj"
          >
            Low readings:
          </label>
          <div
            class="footer__Value-s1gfd3-3 etBDQI"
            data-testid="low"
          >
            0.0
            %
          </div>
        </li>
        <li
          class="footer__Item-s1gfd3-1 eUqZAy"
        >
          <label
            class="footer__Label-s1gfd3-2 dSCXMj"
          >
            Normal readings:
          </label>
          <div
            class="footer__Value-s1gfd3-3 etBDQI"
            data-testid="normal"
          >
            0.0
            %
          </div>
        </li>
        <li
          class="footer__Item-s1gfd3-1 eUqZAy"
        >
          <label
            class="footer__Label-s1gfd3-2 dSCXMj"
          >
            High readings:
          </label>
          <div
            class="footer__Value-s1gfd3-3 etBDQI"
          >
            100.0
            %
          </div>
        </li>
        <br />
        <li
          class="footer__Item-s1gfd3-1 eUqZAy"
        >
          <label
            class="footer__Label-s1gfd3-2 dSCXMj"
          >
            HbA1c (estimated):
          </label>
          <div
            class="footer__Value-s1gfd3-3 etBDQI"
          >
            7.3
            %
          </div>
        </li>
        <li
          class="footer__Item-s1gfd3-1 eUqZAy"
        >
          <label
            class="footer__Label-s1gfd3-2 dSCXMj"
          >
            Standard deviation:
          </label>
          <div
            class="footer__Value-s1gfd3-3 etBDQI"
          >
            0.0
          </div>
        </li>
      </ul>
    </div>
  </body>,
  "container": <div>
    <ul
      class="footer__Container-s1gfd3-0 ikZSNR"
    >
      <li
        class="footer__Item-s1gfd3-1 eUqZAy"
      >
        <label
          class="footer__Label-s1gfd3-2 dSCXMj"
        >
          Mean:
        </label>
        <div
          class="footer__Value-s1gfd3-3 etBDQI"
          data-testid="mean"
        >
          9.1
        </div>
      </li>
      <li
        class="footer__Item-s1gfd3-1 eUqZAy"
      >
        <label
          class="footer__Label-s1gfd3-2 dSCXMj"
        >
          Maximum:
        </label>
        <div
          class="footer__Value-s1gfd3-3 etBDQI"
          data-testid="max"
        >
          9.1
        </div>
      </li>
      <li
        class="footer__Item-s1gfd3-1 eUqZAy"
      >
        <label
          class="footer__Label-s1gfd3-2 dSCXMj"
        >
          Minimum:
        </label>
        <div
          class="footer__Value-s1gfd3-3 etBDQI"
          data-testid="min"
        >
          9.0
        </div>
      </li>
      <br />
      <li
        class="footer__Item-s1gfd3-1 eUqZAy"
      >
        <label
          class="footer__Label-s1gfd3-2 dSCXMj"
        >
          Low readings:
        </label>
        <div
          class="footer__Value-s1gfd3-3 etBDQI"
          data-testid="low"
        >
          0.0
          %
        </div>
      </li>
      <li
        class="footer__Item-s1gfd3-1 eUqZAy"
      >
        <label
          class="footer__Label-s1gfd3-2 dSCXMj"
        >
          Normal readings:
        </label>
        <div
          class="footer__Value-s1gfd3-3 etBDQI"
          data-testid="normal"
        >
          0.0
          %
        </div>
      </li>
      <li
        class="footer__Item-s1gfd3-1 eUqZAy"
      >
        <label
          class="footer__Label-s1gfd3-2 dSCXMj"
        >
          High readings:
        </label>
        <div
          class="footer__Value-s1gfd3-3 etBDQI"
        >
          100.0
          %
        </div>
      </li>
      <br />
      <li
        class="footer__Item-s1gfd3-1 eUqZAy"
      >
        <label
          class="footer__Label-s1gfd3-2 dSCXMj"
        >
          HbA1c (estimated):
        </label>
        <div
          class="footer__Value-s1gfd3-3 etBDQI"
        >
          7.3
          %
        </div>
      </li>
      <li
        class="footer__Item-s1gfd3-1 eUqZAy"
      >
        <label
          class="footer__Label-s1gfd3-2 dSCXMj"
        >
          Standard deviation:
        </label>
        <div
          class="footer__Value-s1gfd3-3 etBDQI"
        >
          0.0
        </div>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<Header /> snapshot test 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <form
        class="header__Form-sc-1jjevr6-2 fjakKr"
        data-testid="headerForm"
      >
        <h1
          class="header__H1-sc-1jjevr6-0 fWlPfO"
        >
          Levels
        </h1>
        <h2
          class="header__H2-sc-1jjevr6-1 ekQLkm"
        >
          Latest CGM reading: Tue, 21 Jan 2020 15:48:03 GMT
        </h2>
        <ul
          class="header__Nav-sc-1jjevr6-6 giLoZI"
        >
          <li
            class="header__Row-sc-1jjevr6-3 hrOvcR"
          >
            <label
              class="header__DateLabel-sc-1jjevr6-4 jgmRoH"
              for="startDate"
            >
              Start date:
            </label>
            <div
              class="react-datepicker-wrapper"
            >
              <div
                class="react-datepicker__input-container"
              >
                <input
                  class=""
                  data-testid="startDate"
                  id="startDate"
                  name="startDate"
                  type="text"
                  value="24 / 03 / 20"
                />
              </div>
            </div>
          </li>
          <li
            class="header__Row-sc-1jjevr6-3 hrOvcR"
          >
            <label
              class="header__DateLabel-sc-1jjevr6-4 jgmRoH"
              for="endDate"
            >
              End date:
            </label>
            <div
              class="react-datepicker-wrapper"
            >
              <div
                class="react-datepicker__input-container"
              >
                <input
                  class=""
                  data-testid="endDate"
                  name="endDate"
                  type="text"
                  value="25 / 03 / 20"
                />
              </div>
            </div>
          </li>
          <li
            class="header__Row-sc-1jjevr6-3 hrOvcR"
          >
            <label
              class="header__DateLabel-sc-1jjevr6-4 header__TypeLabel-sc-1jjevr6-5 kGACjb"
              for="graphType"
            >
              Graph type:
            </label>
            <div
              data-testid="graphType"
            >
              <div
                class=" css-1p9ilfs-container"
              >
                <div
                  class=" css-1kjm5ko-control"
                >
                  <div
                    class=" css-1hwfws3"
                  >
                    <div
                      class=" css-11r8j82-singleValue"
                    >
                      Linear graph
                    </div>
                    <input
                      class="css-62g3xt-dummyInput"
                      id="react-select-graphType-input"
                      readonly=""
                      tabindex="0"
                      value=""
                    />
                  </div>
                  <div
                    class=" css-e23gzz-IndicatorsContainer"
                  >
                    <span
                      class=" css-1okebmr-indicatorSeparator"
                    />
                    <div
                      aria-hidden="true"
                      class=" css-tlfecz-indicatorContainer"
                    >
                      <svg
                        aria-hidden="true"
                        class="css-6q0nyr-Svg"
                        focusable="false"
                        height="20"
                        viewBox="0 0 20 20"
                        width="20"
                      >
                        <path
                          d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                        />
                      </svg>
                    </div>
                  </div>
                </div>
                <input
                  name="graphType"
                  type="hidden"
                  value="linear"
                />
              </div>
            </div>
          </li>
        </ul>
      </form>
    </div>
  </body>,
  "container": <div>
    <form
      class="header__Form-sc-1jjevr6-2 fjakKr"
      data-testid="headerForm"
    >
      <h1
        class="header__H1-sc-1jjevr6-0 fWlPfO"
      >
        Levels
      </h1>
      <h2
        class="header__H2-sc-1jjevr6-1 ekQLkm"
      >
        Latest CGM reading: Tue, 21 Jan 2020 15:48:03 GMT
      </h2>
      <ul
        class="header__Nav-sc-1jjevr6-6 giLoZI"
      >
        <li
          class="header__Row-sc-1jjevr6-3 hrOvcR"
        >
          <label
            class="header__DateLabel-sc-1jjevr6-4 jgmRoH"
            for="startDate"
          >
            Start date:
          </label>
          <div
            class="react-datepicker-wrapper"
          >
            <div
              class="react-datepicker__input-container"
            >
              <input
                class=""
                data-testid="startDate"
                id="startDate"
                name="startDate"
                type="text"
                value="24 / 03 / 20"
              />
            </div>
          </div>
        </li>
        <li
          class="header__Row-sc-1jjevr6-3 hrOvcR"
        >
          <label
            class="header__DateLabel-sc-1jjevr6-4 jgmRoH"
            for="endDate"
          >
            End date:
          </label>
          <div
            class="react-datepicker-wrapper"
          >
            <div
              class="react-datepicker__input-container"
            >
              <input
                class=""
                data-testid="endDate"
                name="endDate"
                type="text"
                value="25 / 03 / 20"
              />
            </div>
          </div>
        </li>
        <li
          class="header__Row-sc-1jjevr6-3 hrOvcR"
        >
          <label
            class="header__DateLabel-sc-1jjevr6-4 header__TypeLabel-sc-1jjevr6-5 kGACjb"
            for="graphType"
          >
            Graph type:
          </label>
          <div
            data-testid="graphType"
          >
            <div
              class=" css-1p9ilfs-container"
            >
              <div
                class=" css-1kjm5ko-control"
              >
                <div
                  class=" css-1hwfws3"
                >
                  <div
                    class=" css-11r8j82-singleValue"
                  >
                    Linear graph
                  </div>
                  <input
                    class="css-62g3xt-dummyInput"
                    id="react-select-graphType-input"
                    readonly=""
                    tabindex="0"
                    value=""
                  />
                </div>
                <div
                  class=" css-e23gzz-IndicatorsContainer"
                >
                  <span
                    class=" css-1okebmr-indicatorSeparator"
                  />
                  <div
                    aria-hidden="true"
                    class=" css-tlfecz-indicatorContainer"
                  >
                    <svg
                      aria-hidden="true"
                      class="css-6q0nyr-Svg"
                      focusable="false"
                      height="20"
                      viewBox="0 0 20 20"
                      width="20"
                    >
                      <path
                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                      />
                    </svg>
                  </div>
                </div>
              </div>
              <input
                name="graphType"
                type="hidden"
                value="linear"
              />
            </div>
          </div>
        </li>
      </ul>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
